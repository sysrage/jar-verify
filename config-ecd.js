var os = require('os'); // Not required and will break with older Node.js versions

// Configuration file for jar-verify.
module.exports = {

  // Temporary directory for file extraction/comparison
  tempDir: '/tmp/',

  // Base directory where data files should be saved
  dataDir: __dirname + '/data/',

  // Base directory where JAR files should be located
  jarDir: os.homedir() + '/Downloads/SUPs/ECD/jars',

  // Regular Expression to match vendor string (matches elx or elx-lnvgy)
  vendor: 'elx(?:\-lnvgy)?',

  // Determine if kits should be combined or separate based on ECD/CCX split
  combinedKit: false,

  // Definition of all available ASIC types
  // If two entries contain the same 'name' data (e.g. Lancer and Lancer G6), the more precise
  // entry (i.e. Lancer G6) must be listed first.
  asicTypes: [
    {
      name: 'Lancer G6',
      type: 'fc',
      agentlessCfgNames: {
        13: 'LANG6_AG-BOARDS'
      },
      fwCfgNames: {
        rack: 'A6',
        flex: 'A6',
        bladecenter: 'A6'
      },
      fwMatrixNames: {
        rack: ['LPe31000', 'LPe31002', 'LPe32000', 'LPe32002'],
        flex: [],
        bladecenter: [],
      },
      workaroundName: 'lancerg6'
    },
    {
      name: 'Lancer G5',
      type: 'fc',
      agentlessCfgNames: {
        13: 'LANG5_AG-BOARDS'
      },
      fwCfgNames: {
        rack: 'A5',
        flex: 'A5',
        bladecenter: 'A5'
      },
      fwMatrixNames: {
        rack: ['LPe16000', 'LPe16002'],
        flex: ['LPm16002', 'LPm16004'],
        bladecenter: [],
      },
      workaroundName: 'lancer'
    },
    {
      name: 'Saturn',
      type: 'fc',
      agentlessCfgNames: {
        10: 'SAT_AG-BOARDS',
        32773: 'SAT_BOOT_AG-BOARDS'
      },
      fwCfgNames: {
        rack: 'ud',
        flex: 'uf',
        bladecenter: 'uf'
      },
      bootCfgNames: {
        rack: 'UU',
        flex: 'UU',
        bladecenter: 'UU'
      },
      fwMatrixNames: {
        rack: ['LPe12000', 'LPe12002'],
        flex: ['LPe1205'],
        bladecenter: ['LPe1205'],
      },
      workaroundName: 'ud'
    }
  ],

  // Definition of all Operating System mappings
  // Name in BOM file must begin as shown in 'name' field below.
  // If two entries contain the same 'name' data (e.g. Windows 2012 and Windows 2012 R2), the more precise
  // entry (i.e. Windows 2012 R2) must be listed first.
  osMappings: [
    {
      name: 'RHEL 5',
      id: 203,
      pkgsdkName: ['RHEL 5'],
      version: '5',
      arch: ['x86', 'x64'],
      type: 'linux',
      ddName: 'rhel5',
      kernel: {
        9: '2.6.18-348',
        10: '2.6.18-371',
        11: '2.6.18-398'
      }
    },
    {
      name: 'RHEL 6',
      id: 208,
      pkgsdkName: ['RHEL 6'],
      version: '6',
      arch: ['x86', 'x64'],
      type: 'linux',
      ddName: 'rhel6',
      kernel: {
        5: '2.6.32-431',
        6: '2.6.32-504',
        7: '2.6.32-573',
        8: '2.6.32-642'
      }
    },
    {
      name: 'RHEL 7',
      id: 209,
      pkgsdkName: ['RHEL 7'],
      version: '7',
      arch: ['x64'],
      type: 'linux',
      ddName: 'rhel7',
      kernel: {
        0: '3.10.0-123',
        1: '3.10.0-229',
        2: '3.10.0-327',
        3: '3.10.0-493'
      }
    },
    {
      name: 'SLES 10',
      id: 206,
      pkgsdkName: ['SLES 10'],
      version: '10',
      arch: ['x86', 'x64'],
      type: 'linux',
      ddName: 'sles10',
      kernel: {
        2: '2.6.16.60_0.21',
        3: '2.6.16.60_0.54',
        4: '2.6.16.60_0.85'
      }
    },
    {
      name: 'SLES 11',
      id: 207,
      pkgsdkName: ['SLES 11'],
      version: '11',
      arch: ['x86', 'x64'],
      type: 'linux',
      ddName: 'sles11',
      kernel: {
        2: '3.0.13_0.27',
        3: '3.0.76_0.11',
        4: '3.0.101_63'
      }
    },
    {
      name: 'SLES 12',
      id: 210,
      pkgsdkName: ['SLES 12'],
      version: '12',
      arch: ['x64'],
      type: 'linux',
      ddName: 'sles12',
      kernel: {
        0: '3.12.28_4',
        1: '3.12.49_11'
      },
      elxFlashDir: {
        0: 'sles-12-sp0',
        1: 'sles-12-sp0',
        2: 'sles-12-sp2'
      }
    },
    {
      name: 'Windows 2008',
      id: 109,
      pkgsdkName: ['Windows 2008'],
      version: '2008',
      arch: ['x64'],
      type: 'windows',
      ddName: 'windows'
    },
    {
      name: 'Windows 2012 R2',
      id: 113,
      pkgsdkName: ['Windows 2012 R2'],
      version: '2012 R2',
      arch: ['x64'],
      type: 'windows',
      ddName: 'windows'
    },
    {
      name: 'Windows 2012',
      id: 112,
      pkgsdkName: ['Windows 2012'],
      version: '2012',
      arch: ['x64'],
      type: 'windows',
      ddName: 'windows'
    },
    {
      name: 'Windows 2016',
      id: 114,
      pkgsdkName: ['Windows 2016'],
      version: '2016',
      arch: ['x64'],
      type: 'windows',
      ddName: 'windows'
    },
    {
      name: 'VMware ESXi 5.0',
      id: 311,
      pkgsdkName: ['VMware vSphere 5.0'],
      version: '5.0',
      arch: ['x64'],
      type: 'vmware',
      ddName: 'none'
    },
    {
      name: 'VMware ESXi 5.1',
      id: 311,
      pkgsdkName: ['VMware vSphere 5.0'],
      version: '5.0',
      arch: ['x64'],
      type: 'vmware',
      ddName: 'none'
    },
    {
      name: 'VMware ESXi 5.5',
      id: 312,
      pkgsdkName: ['VMware vSphere 2013', 'VMware ESXi 5.5'],
      version: '5.5',
      arch: ['x64'],
      type: 'vmware',
      ddName: 'none'
    },
    {
      name: 'VMware ESXi 6.0',
      id: 313,
      pkgsdkName: ['VMware ESXi 6'],
      version: '6.0',
      arch: ['x64'],
      type: 'vmware',
      ddName: 'none'
    },
    {
      name: 'VMware ESXi 6.5',
      id: 314,
      pkgsdkName: ['VMware ESXi 6.5'],
      version: '6.5',
      arch: ['x64'],
      type: 'vmware',
      ddName: 'none'
    },
  ],

  // List of valid Applicable Device ID names
  appDIDNames: [
    // Saturn
    {name: 'elx_Tetra_FC',              value: 'PCI\VEN_10DF&DEV_F100&SUBSYS_F12410DF', type: 'fc'},
    {name: 'elx_Rhea_FC',               value: 'PCI\VEN_10DF&DEV_F100&SUBSYS_F13010DF', type: 'fc'},
    {name: 'elx_Heritage_1p_2p_FC',     value: 'PCI\VEN_10DF&DEV_F100&SUBSYS_F10010DF', type: 'fc'},

    // Lancer G5
    {name: 'elx_Vanguard_FC',           value: 'PCI\VEN_10DF&DEV_E200&SUBSYS_E20210DF', type: 'fc'},
    {name: 'elx_VanguardDL_FC',         value: 'PCI\VEN_10DF&DEV_E200&SUBSYS_E28210DF', type: 'fc'},
    {name: 'elx_Chameleon1P_FC',        value: 'PCI\VEN_10DF&DEV_E200&SUBSYS_E20310DF', type: 'fc'},
    {name: 'elx_Chameleon2P_FC',        value: 'PCI\VEN_10DF&DEV_E200&SUBSYS_E20410DF', type: 'fc'},
    {name: 'elx_Horton_FC',             value: 'PCI\VEN_10DF&DEV_E200&SUBSYS_E28810DF', type: 'fc'},
    {name: 'elx_HortonDL_FC',           value: 'PCI\VEN_10DF&DEV_E200&SUBSYS_E28910DF', type: 'fc'},

    // Lancer G6
    {name: 'elx_Croydon1P_FC',          value: 'PCI\VEN_10DF&DEV_E300&SUBSYS_E33310DF', type: 'fc'},
    {name: 'elx_Croydon2P_FC',          value: 'PCI\VEN_10DF&DEV_E300&SUBSYS_E33210DF', type: 'fc'},
    {name: 'elx_Sutton1P_FC',           value: 'PCI\VEN_10DF&DEV_E300&SUBSYS_E33110DF', type: 'fc'},
    {name: 'elx_Sutton2P_FC',           value: 'PCI\VEN_10DF&DEV_E300&SUBSYS_E33010DF', type: 'fc'},

  ],

  // Package types and their expected FixIDs
  pkgTypes: {
    ddWinNIC: {
      name: 'Windows NIC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_nic_([^_]+)_windows',
      type: 'dd',
      os: 'windows',
      osType: 'windows',
      proto: 'nic',
      inputDesc: 'Emulex NIC Device Driver for Windows - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2nd6x.sys', 'be2nd62.sys', 'ocnd63.sys', 'ocnd64.sys', 'ocnd65.sys'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Win NIC DD',
      ddImageFileSearch: 'elxdrvr\-nic\-([0-9\.]+)\-([0-9]+)\.exe',
      ddImageFileReplace: '$1',
      changeDesc: '\\s*(Emulex NIC Device Driver for Windows)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddWinISCSI: {
      name: 'Windows iSCSI Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_iscsi_([^_]+)_windows',
      type: 'dd',
      os: 'windows',
      osType: 'windows',
      proto: 'iscsi',
      inputDesc: 'Emulex iSCSI Device Driver for Windows - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2iscsi.sys'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Win iSCSI DD',
      ddImageFileSearch: 'elxdrvr\-iscsi\-([0-9\.]+)\-([0-9]+)\.exe',
      ddImageFileReplace: '$1',
      changeDesc: '\\s*(Emulex iSCSI Device Driver for Windows)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddWinFC: {
      name: 'Windows FC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_fc_([^_]+)_windows',
      type: 'dd',
      os: 'windows',
      osType: 'windows',
      proto: 'fc',
      inputDesc: 'Emulex FC Device Driver for Windows - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['elxfc.sys'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Win FC DD',
      ddImageFileSearch: 'elxdrvr\-fc\-([0-9\.]+)\-([0-9]+)\.exe',
      ddImageFileReplace: '$1',
      changeDesc: '\\s*(Emulex FC Device Driver for Windows)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddWinFCoE: {
      name: 'Windows FCoE Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_cna_([^_]+)_windows',
      type: 'dd',
      os: 'windows',
      osType: 'windows',
      proto: 'cna',
      inputDesc: 'Emulex FCoE Device Driver for Windows - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['elxcna.sys'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Win FCoE DD',
      ddImageFileSearch: 'elxdrvr\-fcoe\-([0-9\.]+)\-([0-9]+)\.exe',
      ddImageFileReplace: '$1',
      changeDesc: '\\s*(Emulex FCoE Device Driver for Windows)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddRHEL5NIC: {
      name: 'RHEL 5.x NIC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_nic_([^_]+)_rhel5',
      type: 'dd',
      os: 'rhel5',
      osType: 'linux',
      proto: 'nic',
      inputDesc: 'Emulex NIC (be2net) Device Driver for RHEL5 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2net.ko'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Linux NIC DD',
      ddImageFileSearch: 'kmod\-elx\-be2net\-([0-9\.]+)\-[0-9]+\.rhel5u([0-9])\.(i686|x86_64)\.rpm',
      ddImageFileVersion: '$1',
      ddImageFileSP: '$2',
      ddImageFileArch: '$3',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-be2net\-([0-9\.]+)\-[0-9]+\.rhel5u([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-be2net-([0-9\.]+)\.rhel5u([0-9])\.(i386|x86_64)\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex NIC Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddRHEL5ISCSI: {
      name: 'RHEL 5.x iSCSI Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_iscsi_([^_]+)_rhel5',
      type: 'dd',
      os: 'rhel5',
      osType: 'linux',
      proto: 'iscsi',
      inputDesc: 'Emulex iSCSI (be2iscsi) Device Driver for RHEL5 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2iscsi.ko'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Linux iSCSI DD',
      ddImageFileSearch: 'kmod\-elx\-be2iscsi\-([0-9\.]+)\-[0-9]+\.rhel5u([0-9])\.(i686|x86_64)\.rpm',
      ddImageFileVersion: '$1',
      ddImageFileSP: '$2',
      ddImageFileArch: '$3',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-be2iscsi\-([0-9\.]+)\-[0-9]+\.rhel5u([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-be2iscsi-([0-9\.]+)\.rhel5u([0-9])\.(i386|x86_64)\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex iSCSI Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddRHEL5FC: {
      name: 'RHEL 5.x FC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_fc_([^_]+)_rhel5',
      type: 'dd',
      os: 'rhel5',
      osType: 'linux',
      proto: 'fc',
      inputDesc: 'Emulex FC (lpfc) Device Driver for RHEL5 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['lpfc.ko'],
      ddVerFormat: '0:##VERSION##',
      appDevIdCfgName: 'Linux FC/FCoE DD',
      ddImageFileSearch: 'kmod\-elx\-lpfc\-([0-9\.]+)\-[0-9]+\.rhel5u([0-9])\.(i686|x86_64)\.rpm',
      ddImageFileVersion: '$1',
      ddImageFileSP: '$2',
      ddImageFileArch: '$3',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-lpfc\-([0-9\.]+)\-[0-9]+\.rhel5u([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-lpfc-([0-9\.]+)\.rhel5u([0-9])\.(i386|x86_64)\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex FC Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddRHEL6NIC: {
      name: 'RHEL 6.x NIC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_nic_([^_]+)_rhel6',
      type: 'dd',
      os: 'rhel6',
      osType: 'linux',
      proto: 'nic',
      inputDesc: 'Emulex NIC (be2net) Device Driver for RHEL6 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2net.ko'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Linux NIC DD',
      ddImageFileSearch: 'kmod\-elx\-be2net\-([0-9\.]+)\-[0-9]+\.rhel6u([0-9])\.(i686|x86_64)\.rpm',
      ddImageFileVersion: '$1',
      ddImageFileSP: '$2',
      ddImageFileArch: '$3',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-be2net\-([0-9\.]+)\-[0-9]+\.rhel6u([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-be2net-([0-9\.]+)\.rhel6u([0-9])\.(i386|x86_64)\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex NIC Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddRHEL6ISCSI: {
      name: 'RHEL 6.x iSCSI Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_iscsi_([^_]+)_rhel6',
      type: 'dd',
      os: 'rhel6',
      osType: 'linux',
      proto: 'iscsi',
      inputDesc: 'Emulex iSCSI (be2iscsi) Device Driver for RHEL6 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2iscsi.ko'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Linux iSCSI DD',
      ddImageFileSearch: 'kmod\-elx\-be2iscsi\-([0-9\.]+)\-[0-9]+\.rhel6u([0-9])\.(i686|x86_64)\.rpm',
      ddImageFileVersion: '$1',
      ddImageFileSP: '$2',
      ddImageFileArch: '$3',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-be2iscsi\-([0-9\.]+)\-[0-9]+\.rhel6u([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-be2iscsi-([0-9\.]+)\.rhel6u([0-9])\.(i386|x86_64)\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex iSCSI Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddRHEL6FC: {
      name: 'RHEL 6.x FC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_fc_([^_]+)_rhel6',
      type: 'dd',
      os: 'rhel6',
      osType: 'linux',
      proto: 'fc',
      inputDesc: 'Emulex FC (lpfc) Device Driver for RHEL6 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['lpfc.ko'],
      ddVerFormat: '0:##VERSION##',
      appDevIdCfgName: 'Linux FC/FCoE DD',
      ddImageFileSearch: 'kmod\-elx\-lpfc\-([0-9\.]+)\-[0-9]+\.rhel6u([0-9])\.(i686|x86_64)\.rpm',
      ddImageFileVersion: '$1',
      ddImageFileSP: '$2',
      ddImageFileArch: '$3',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-lpfc\-([0-9\.]+)\-[0-9]+\.rhel6u([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-lpfc-([0-9\.]+)\.rhel6u([0-9])\.(i386|x86_64)\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex FC Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddRHEL7NIC: {
      name: 'RHEL 7.x NIC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_nic_([^_]+)_rhel7',
      type: 'dd',
      os: 'rhel7',
      osType: 'linux',
      proto: 'nic',
      inputDesc: 'Emulex NIC (be2net) Device Driver for RHEL7 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2net.ko'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Linux NIC DD',
      ddImageFileSearch: 'kmod\-elx\-be2net\-([0-9\.]+)\-[0-9]+\.rhel7u([0-9])\.(i686|x86_64)\.rpm',
      ddImageFileVersion: '$1',
      ddImageFileSP: '$2',
      ddImageFileArch: '$3',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-be2net\-([0-9\.]+)\-[0-9]+\.rhel7u([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-be2net-([0-9\.]+)\.rhel7u([0-9])\.(i386|x86_64)\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex NIC Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddRHEL7ISCSI: {
      name: 'RHEL 7.x iSCSI Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_iscsi_([^_]+)_rhel7',
      type: 'dd',
      os: 'rhel7',
      osType: 'linux',
      proto: 'iscsi',
      inputDesc: 'Emulex iSCSI (be2iscsi) Device Driver for RHEL7 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2iscsi.ko'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Linux iSCSI DD',
      ddImageFileSearch: 'kmod\-elx\-be2iscsi\-([0-9\.]+)\-[0-9]+\.rhel7u([0-9])\.(i686|x86_64)\.rpm',
      ddImageFileVersion: '$1',
      ddImageFileSP: '$2',
      ddImageFileArch: '$3',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-be2iscsi\-([0-9\.]+)\-[0-9]+\.rhel7u([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-be2iscsi-([0-9\.]+)\.rhel7u([0-9])\.(i386|x86_64)\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex iSCSI Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddRHEL7FC: {
      name: 'RHEL 7.x FC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_fc_([^_]+)_rhel7',
      type: 'dd',
      os: 'rhel7',
      osType: 'linux',
      proto: 'fc',
      inputDesc: 'Emulex FC (lpfc) Device Driver for RHEL7 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['lpfc.ko'],
      ddVerFormat: '0:##VERSION##',
      appDevIdCfgName: 'Linux FC/FCoE DD',
      ddImageFileSearch: 'kmod\-elx\-lpfc\-([0-9\.]+)\-[0-9]+\.rhel7u([0-9])\.(i686|x86_64)\.rpm',
      ddImageFileVersion: '$1',
      ddImageFileSP: '$2',
      ddImageFileArch: '$3',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-lpfc\-([0-9\.]+)\-[0-9]+\.rhel7u([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-lpfc-([0-9\.]+)\.rhel7u([0-9])\.(i386|x86_64)\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex FC Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddSLES10NIC: {
      name: 'SLES 10.x NIC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_nic_([^_]+)_sles10',
      type: 'dd',
      os: 'sles10',
      osType: 'linux',
      proto: 'nic',
      inputDesc: 'Emulex NIC (be2net) Device Driver for SLES10 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2net.ko'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Linux NIC DD',
      ddImageFileSearch: 'elx\-be2net\-(kmp\-[a-z]+)\-([0-9\.]+)_([0-9\._]+)\-[0-9]+\.sles10sp([0-9])\.(i586|x86_64)\.rpm',
      ddImageFileType: '$1',
      ddImageFileVersion: '$2',
      ddImageFileKernel: '$3',
      ddImageFileSP: '$4',
      ddImageFileArch: '$5',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-be2net\-([0-9\.]+)\-[0-9]+\.sles10sp([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-be2net_([0-9\.]+)\-sles10sp([0-9])\-(i386|x86_64)\-[0-9]+\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex NIC Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddSLES10ISCSI: {
      name: 'SLES 10.x iSCSI Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_iscsi_([^_]+)_sles10',
      type: 'dd',
      os: 'sles10',
      osType: 'linux',
      proto: 'iscsi',
      inputDesc: 'Emulex iSCSI (be2iscsi) Device Driver for SLES10 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2iscsi.ko'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Linux iSCSI DD',
      ddImageFileSearch: 'elx\-be2iscsi\-(kmp\-[a-z]+)\-([0-9\.]+)_([0-9\._]+)\-[0-9]+\.sles10sp([0-9])\.(i586|x86_64)\.rpm',
      ddImageFileType: '$1',
      ddImageFileVersion: '$2',
      ddImageFileKernel: '$3',
      ddImageFileSP: '$4',
      ddImageFileArch: '$5',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-be2iscsi\-([0-9\.]+)\-[0-9]+\.sles10sp([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-be2iscsi_([0-9\.]+)\-sles10sp([0-9])\-(i386|x86_64)\-[0-9]+\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex iSCSI Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddSLES10FC: {
      name: 'SLES 10.x FC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_fc_([^_]+)_sles10',
      type: 'dd',
      os: 'sles10',
      osType: 'linux',
      proto: 'fc',
      inputDesc: 'Emulex FC (lpfc) Device Driver for SLES10 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['lpfc.ko'],
      ddVerFormat: '0:##VERSION##',
      appDevIdCfgName: 'Linux FC/FCoE DD',
      ddImageFileSearch: 'elx\-lpfc\-(kmp\-[a-z]+)\-([0-9\.]+)_([0-9\._]+)\-[0-9]+\.sles10sp([0-9])\.(i586|x86_64)\.rpm',
      ddImageFileType: '$1',
      ddImageFileVersion: '$2',
      ddImageFileKernel: '$3',
      ddImageFileSP: '$4',
      ddImageFileArch: '$5',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-lpfc\-([0-9\.]+)\-[0-9]+\.sles10sp([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-lpfc_([0-9\.]+)\-sles10sp([0-9])\-(i386|x86_64)\-[0-9]+\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex FC Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddSLES11NIC: {
      name: 'SLES 11.x NIC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_nic_([^_]+)_sles11',
      type: 'dd',
      os: 'sles11',
      osType: 'linux',
      proto: 'nic',
      inputDesc: 'Emulex NIC (be2net) Device Driver for SLES11 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2net.ko'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Linux NIC DD',
      ddImageFileSearch: 'elx\-be2net\-(kmp\-[a-z]+)\-([0-9\.]+)_([0-9\._]+)\-[0-9]+\.sles11sp([0-9])\.(i586|x86_64)\.rpm',
      ddImageFileType: '$1',
      ddImageFileVersion: '$2',
      ddImageFileKernel: '$3',
      ddImageFileSP: '$4',
      ddImageFileArch: '$5',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-be2net\-([0-9\.]+)\-[0-9]+\.sles11sp([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-be2net_([0-9\.]+)\-sles11sp([0-9])\-(i386|x86_64)\-[0-9]+\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex NIC Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddSLES11ISCSI: {
      name: 'SLES 11.x iSCSI Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_iscsi_([^_]+)_sles11',
      type: 'dd',
      os: 'sles11',
      osType: 'linux',
      proto: 'iscsi',
      inputDesc: 'Emulex iSCSI (be2iscsi) Device Driver for SLES11 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2iscsi.ko'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Linux iSCSI DD',
      ddImageFileSearch: 'elx\-be2iscsi\-(kmp\-[a-z]+)\-([0-9\.]+)_([0-9\._]+)\-[0-9]+\.sles11sp([0-9])\.(i586|x86_64)\.rpm',
      ddImageFileType: '$1',
      ddImageFileVersion: '$2',
      ddImageFileKernel: '$3',
      ddImageFileSP: '$4',
      ddImageFileArch: '$5',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-be2iscsi\-([0-9\.]+)\-[0-9]+\.sles11sp([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-be2iscsi_([0-9\.]+)\-sles11sp([0-9])\-(i386|x86_64)\-[0-9]+\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex iSCSI Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddSLES11FC: {
      name: 'SLES 11.x FC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_fc_([^_]+)_sles11',
      type: 'dd',
      os: 'sles11',
      osType: 'linux',
      proto: 'fc',
      inputDesc: 'Emulex FC (lpfc) Device Driver for SLES11 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['lpfc.ko'],
      ddVerFormat: '0:##VERSION##',
      appDevIdCfgName: 'Linux FC/FCoE DD',
      ddImageFileSearch: 'elx\-lpfc\-(kmp\-[a-z]+)\-([0-9\.]+)_([0-9\._]+)\-[0-9]+\.sles11sp([0-9])\.(i586|x86_64)\.rpm',
      ddImageFileType: '$1',
      ddImageFileVersion: '$2',
      ddImageFileKernel: '$3',
      ddImageFileSP: '$4',
      ddImageFileArch: '$5',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-lpfc\-([0-9\.]+)\-[0-9]+\.sles11sp([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-lpfc_([0-9\.]+)\-sles11sp([0-9])\-(i386|x86_64)\-[0-9]+\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex FC Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddSLES12NIC: {
      name: 'SLES 12.x NIC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_nic_([^_]+)_sles12',
      type: 'dd',
      os: 'sles12',
      osType: 'linux',
      proto: 'nic',
      inputDesc: 'Emulex NIC (be2net) Device Driver for SLES12 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2net.ko'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Linux NIC DD',
      ddImageFileSearch: 'elx\-be2net\-(kmp\-[a-z]+)\-([0-9\.]+)_k([0-9\._]+)\-[0-9]+\.sles12sp([0-9])\.(i586|x86_64)\.rpm',
      ddImageFileType: '$1',
      ddImageFileVersion: '$2',
      ddImageFileKernel: '$3',
      ddImageFileSP: '$4',
      ddImageFileArch: '$5',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-be2net\-([0-9\.]+)\-[0-9]+\.sles12sp([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-be2net_([0-9\.]+)\-sles12sp([0-9])\-(i386|x86_64)\-[0-9]+\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex NIC Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddSLES12ISCSI: {
      name: 'SLES 12.x iSCSI Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_iscsi_([^_]+)_sles12',
      type: 'dd',
      os: 'sles12',
      osType: 'linux',
      proto: 'iscsi',
      inputDesc: 'Emulex iSCSI (be2iscsi) Device Driver for SLES12 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['be2iscsi.ko'],
      ddVerFormat: '##VERSION##',
      appDevIdCfgName: 'Linux iSCSI DD',
      ddImageFileSearch: 'elx\-be2iscsi\-(kmp\-[a-z]+)\-([0-9\.]+)_k([0-9\._]+)\-[0-9]+\.sles12sp([0-9])\.(i586|x86_64)\.rpm',
      ddImageFileType: '$1',
      ddImageFileVersion: '$2',
      ddImageFileKernel: '$3',
      ddImageFileSP: '$4',
      ddImageFileArch: '$5',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-be2iscsi\-([0-9\.]+)\-[0-9]+\.sles12sp([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-be2iscsi_([0-9\.]+)\-sles12sp([0-9])\-(i386|x86_64)\-[0-9]+\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex iSCSI Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    ddSLES12FC: {
      name: 'SLES 12.x FC Driver',
      regex: '^elx(?:\-lnvgy)?\_dd_fc_([^_]+)_sles12',
      type: 'dd',
      os: 'sles12',
      osType: 'linux',
      proto: 'fc',
      inputDesc: 'Emulex FC (lpfc) Device Driver for SLES12 - ##VERSION## - Release ##RELEASE##',
      ddFileName: ['lpfc.ko'],
      ddVerFormat: '0:##VERSION##',
      appDevIdCfgName: 'Linux FC/FCoE DD',
      ddImageFileSearch: 'elx\-lpfc\-(kmp\-[a-z]+)\-([0-9\.]+)_k([0-9\._]+)\-[0-9]+\.sles12sp([0-9])\.(i586|x86_64)\.rpm',
      ddImageFileType: '$1',
      ddImageFileVersion: '$2',
      ddImageFileKernel: '$3',
      ddImageFileSP: '$4',
      ddImageFileArch: '$5',
      srpmImageFileDir: 'SRPM/',
      srpmImageFileSearch: 'elx\-lpfc\-([0-9\.]+)\-[0-9]+\.sles12sp([0-9])\.src\.rpm',
      srpmImageFileVersion: '$1',
      srpmImageFileSP: '$2',
      dudImageFileSearch: 'elx\-lpfc_([0-9\.]+)\-sles12sp([0-9])\-(i386|x86_64)\-[0-9]+\.iso',
      dudImageFileVersion: '$1',
      dudImageFileSP: '$2',
      dudImageFileArch: '$3',
      changeDesc: '\\s*(Emulex FC Device Driver for Linux)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Device Driver Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    fwLancerG6Linux: {
      name: 'Linux Lancer G6 Firmware',
      regex: '^elx(?:\-lnvgy)?\_fw_fc_([A-Za-z0-9]+\-lp3x\-[0-9\.]+\-[0-9]+)_linux',
      type: 'fw',
      os: 'linux',
      osType: 'linux',
      asic: 'Lancer G6',
      preVersion: 'lp3x-',
      inputDesc: 'Emulex HBA (LPe3100x) Firmware Update for Linux - ##VERSION## - Release ##RELEASE##',
      appDevIdCfgName: 'Lancer G6 FW',
      fwImageFileSearch: 'lancerg6_A([0-9\.]+)\.grp',
      fwImageFileReplace: '$1',
      elxflashName: 'elxflash.sh',
      changeDesc: '\\s*(Emulex 16GB Fibre Channel Firmware Package)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Firmware Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    fwLancerG6VMware: {
      name: 'VMware Lancer G6 Firmware',
      regex: '^elx(?:\-lnvgy)?\_fw_fc_([A-Za-z0-9]+\-lp3x\-[0-9\.]+\-[0-9]+)_vmware',
      type: 'fw',
      os: 'vmware',
      osType: 'vmware',
      asic: 'Lancer G6',
      preVersion: 'lp3x-',
      inputDesc: 'Emulex HBA (LPe3100x) Firmware Update for VMware - ##VERSION## - Release ##RELEASE##',
      appDevIdCfgName: 'Lancer G6 FW',
      fwImageFileSearch: 'lancerg6_A([0-9\.]+)\.grp',
      fwImageFileReplace: '$1',
      changeDesc: '\\s*(Emulex 16GB Fibre Channel Firmware Package)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Firmware Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    fwLancerG6Windows: {
      name: 'Windows Lancer G6 Firmware',
      regex: '^elx(?:\-lnvgy)?\_fw_fc_([A-Za-z0-9]+\-lp3x\-[0-9\.]+\-[0-9]+)_windows',
      type: 'fw',
      os: 'windows',
      osType: 'windows',
      asic: 'Lancer G6',
      preVersion: 'lp3x-',
      inputDesc: 'Emulex HBA (LPe3100x) Firmware Update for Windows - ##VERSION## - Release ##RELEASE##',
      appDevIdCfgName: 'Lancer G6 FW',
      fwImageFileSearch: 'lancerg6_A([0-9\.]+)\.grp',
      fwImageFileReplace: '$1',
      elxflashName: 'elxflash.bat',
      changeDesc: '\\s*(Emulex 16GB Fibre Channel Firmware Package)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Firmware Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    fwLancerG5Linux: {
      name: 'Linux Lancer G5 Firmware',
      regex: '^elx(?:\-lnvgy)?\_fw_fc_([A-Za-z0-9]+\-lp16\-[0-9\.]+\-[0-9]+)_linux',
      type: 'fw',
      os: 'linux',
      osType: 'linux',
      asic: 'Lancer G5',
      preVersion: 'lp16-',
      inputDesc: 'Emulex HBA (LPe1600x) Firmware Update for Linux - ##VERSION## - Release ##RELEASE##',
      appDevIdCfgName: 'Lancer G5 FW',
      fwImageFileSearch: 'lancer_A([0-9\.]+)\.grp',
      fwImageFileReplace: '$1',
      elxflashName: 'elxflash.sh',
      changeDesc: '\\s*(Emulex 16GB Fibre Channel Firmware Package)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Firmware Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    fwLancerG5VMware: {
      name: 'VMware Lancer G5 Firmware',
      regex: '^elx(?:\-lnvgy)?\_fw_fc_([A-Za-z0-9]+\-lp16\-[0-9\.]+\-[0-9]+)_vmware',
      type: 'fw',
      os: 'vmware',
      osType: 'vmware',
      asic: 'Lancer G5',
      preVersion: 'lp16-',
      inputDesc: 'Emulex HBA (LPe1600x) Firmware Update for VMware - ##VERSION## - Release ##RELEASE##',
      appDevIdCfgName: 'Lancer G5 FW',
      fwImageFileSearch: 'lancer_A([0-9\.]+)\.grp',
      fwImageFileReplace: '$1',
      changeDesc: '\\s*(Emulex 16GB Fibre Channel Firmware Package)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Firmware Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    fwLancerG5Windows: {
      name: 'Windows Lancer G5 Firmware',
      regex: '^elx(?:\-lnvgy)?\_fw_fc_([A-Za-z0-9]+\-lp16\-[0-9\.]+\-[0-9]+)_windows',
      type: 'fw',
      os: 'windows',
      osType: 'windows',
      asic: 'Lancer G5',
      preVersion: 'lp16-',
      inputDesc: 'Emulex HBA (LPe1600x) Firmware Update for Windows - ##VERSION## - Release ##RELEASE##',
      appDevIdCfgName: 'Lancer G5 FW',
      fwImageFileSearch: 'lancer_A([0-9\.]+)\.grp',
      fwImageFileReplace: '$1',
      elxflashName: 'elxflash.bat',
      changeDesc: '\\s*(Emulex 16GB Fibre Channel Firmware Package)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Firmware Version:\\s*([0-9\.]+)\\s*',
      changeVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    fwSaturnLinux: {
      name: 'Linux Saturn Firmware',
      regex: '^elx(?:\-lnvgy)?\_fw_fc_([A-Za-z0-9]+\-[0-9\.]+[xa][0-9]+\-[0-9]+)_linux',
      type: 'fw',
      os: 'linux',
      osType: 'linux',
      asic: 'Saturn',
      bootRegex: '([0-9\.]+[xa][0-9]+)',
      inputDesc: 'Emulex HBA (LPe1205/LPe1200x) Firmware Update for Linux - ##VERSION## - Release ##RELEASE##',
      appDevIdCfgName: 'Saturn FW',
      fwImageFileSearch: '(u[df])([0-9])([0-9][0-9])([xa])([0-9]+)\.all',
      fwImageFileReplace: '$2.$3$4$5',
      bootImageFileSearch: 'UU([0-9])([0-9][0-9])([xa])([0-9]+)\.prg',
      bootImageFileReplace: '$1.$2$3$4',
      fwImageFileNames: {
        rack: 'ud',
        flex: 'uf',
        bladecenter: 'uf'
      },
      bootImageNames: {
        rack: 'UU',
        flex: 'UU',
        bladecenter: 'UU'
      },
      elxflashName: 'elxflash.sh',
      changeDesc: '\\s*(Emulex 8Gb Fibre Channel Firmware Package)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Firmware Version:\\s*([0-9\.]+[xa][0-9]+)\\s*',
      changeVerReplace: '$1',
      changeBootVer: 'Boot Code Version:\\s*([0-9\.]+[xa][0-9]+)\\s*',
      changeBootVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    fwSaturnVMware: {
      name: 'VMware Saturn Firmware',
      regex: '^elx(?:\-lnvgy)?\_fw_fc_([A-Za-z0-9]+\-[0-9\.]+[xa][0-9]+\-[0-9]+)_vmware',
      type: 'fw',
      os: 'vmware',
      osType: 'vmware',
      asic: 'Saturn',
      bootRegex: '([0-9\.]+[xa][0-9]+)',
      inputDesc: 'Emulex HBA (LPe1205/LPe1200x) Firmware Update for VMware - ##VERSION## - Release ##RELEASE##',
      appDevIdCfgName: 'Saturn FW',
      fwImageFileSearch: '(u[df])([0-9])([0-9][0-9])([xa])([0-9]+)\.all',
      fwImageFileReplace: '$2.$3$4$5',
      bootImageFileSearch: 'UU([0-9])([0-9][0-9])([xa])([0-9]+)\.prg',
      bootImageFileReplace: '$1.$2$3$4',
      fwImageFileNames: {
        rack: 'ud',
        flex: 'uf',
        bladecenter: 'uf'
      },
      bootImageNames: {
        rack: 'UU',
        flex: 'UU',
        bladecenter: 'UU'
      },
      changeDesc: '\\s*(Emulex 8Gb Fibre Channel Firmware Package)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Firmware Version:\\s*([0-9\.]+[xa][0-9]+)\\s*',
      changeVerReplace: '$1',
      changeBootVer: 'Boot Code Version:\\s*([0-9\.]+[xa][0-9]+)\\s*',
      changeBootVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    },
    fwSaturnWindows: {
      name: 'Windows Saturn Firmware',
      regex: '^elx(?:\-lnvgy)?\_fw_fc_([A-Za-z0-9]+\-[0-9\.]+[xa][0-9]+\-[0-9]+)_windows',
      type: 'fw',
      os: 'windows',
      osType: 'windows',
      asic: 'Saturn',
      bootRegex: '([0-9\.]+[xa][0-9]+)',
      inputDesc: 'Emulex HBA (LPe1205/LPe1200x) Firmware Update for Windows - ##VERSION## - Release ##RELEASE##',
      appDevIdCfgName: 'Saturn FW',
      fwImageFileSearch: '(u[df])([0-9])([0-9][0-9])([xa])([0-9]+)\.all',
      fwImageFileReplace: '$2.$3$4$5',
      bootImageFileSearch: 'UU([0-9])([0-9][0-9])([xa])([0-9]+)\.prg',
      bootImageFileReplace: '$1.$2$3$4',
      fwImageFileNames: {
        rack: 'ud',
        flex: 'uf',
        bladecenter: 'uf'
      },
      bootImageNames: {
        rack: 'UU',
        flex: 'UU',
        bladecenter: 'UU'
      },
      elxflashName: 'elxflash.bat',
      changeDesc: '\\s*(Emulex 8Gb Fibre Channel Firmware Package)\\s*',
      changeDescReplace: '$1',
      changeVer: 'Firmware Version:\\s*([0-9\.]+[xa][0-9]+)\\s*',
      changeVerReplace: '$1',
      changeBootVer: 'Boot Code Version:\\s*([0-9\.]+[xa][0-9]+)\\s*',
      changeBootVerReplace: '$1',
      changeSupport: 'Supported On:\\s*([^\s]+)\\s*',
      changeSupportReplace: '$1'
    }
  },

  // Classification mapping
  classMap: {
    10: 'firmware',   // Firmware only
    13: '13',         // Combined FW and Boot Code
    32773: 'bios'     // Boot Code (BIOS)
  },

  // All header search strings used to find relevant sections
  headerStr: {
    relName: 'release: ',
    relType: 'type: ',
    osList: 'operating systems',
    systemList: 'machine types',
    systemTypes: ['rack', 'flex', 'bladecenter'], // must match names in asicTypes.fwCfgNames & asicTypes.fwCfgNames
    adapterList: 'adapter models',
  }

};